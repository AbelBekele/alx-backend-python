#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to check if a command exists
check_command() {
    if ! command -v $1 &> /dev/null; then
        echo -e "${YELLOW}Warning: $1 is not installed. Installing...${NC}"
        case $1 in
            "wrk")
                sudo apt-get update && sudo apt-get install -y wrk
                ;;
            *)
                echo "Cannot install $1 automatically. Please install it manually."
                exit 1
                ;;
        esac
    fi
}

# Check required tools
check_command kubectl
check_command wrk

echo -e "${BLUE}Scaling Django deployment to 3 replicas...${NC}"
kubectl scale deployment django-messaging-app --replicas=3

# Wait for pods to be ready
echo -e "${BLUE}Waiting for pods to be ready...${NC}"
sleep 10  # Give some time for pods to start

# Get pod status
echo -e "\n${GREEN}Current pod status:${NC}"
kubectl get pods -l app=django-messaging

# Get service IP for load testing
SERVICE_IP=$(kubectl get service django-messaging-service -o jsonpath='{.spec.clusterIP}')
SERVICE_PORT=80

echo -e "\n${GREEN}Starting load test with wrk...${NC}"
echo "Testing service at http://$SERVICE_IP:$SERVICE_PORT"
wrk -t4 -c100 -d30s http://$SERVICE_IP:$SERVICE_PORT

# Monitor resource usage
echo -e "\n${GREEN}Monitoring resource usage:${NC}"
echo -e "${YELLOW}Pod Resource Usage:${NC}"
kubectl top pods -l app=django-messaging

echo -e "\n${YELLOW}Node Resource Usage:${NC}"
kubectl top nodes

# Final status check
echo -e "\n${GREEN}Final deployment status:${NC}"
kubectl get deployment django-messaging-app

echo -e "\n${GREEN}Script completed successfully!${NC}"

# Additional monitoring information
echo -e "\n${BLUE}Additional Information:${NC}"
echo -e "${YELLOW}Deployment Events:${NC}"
kubectl get events --sort-by=.metadata.creationTimestamp | grep django-messaging-app

echo -e "\n${YELLOW}Pod Logs (latest pod):${NC}"
POD_NAME=$(kubectl get pods -l app=django-messaging -o jsonpath='{.items[0].metadata.name}')
kubectl logs $POD_NAME --tail=50 