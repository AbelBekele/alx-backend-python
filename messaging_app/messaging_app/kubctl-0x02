#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Function to check deployment status
check_deployment() {
    local deploy_name=$1
    echo -e "${BLUE}Checking deployment status for $deploy_name...${NC}"
    
    # Wait for rollout to complete
    if ! kubectl rollout status deployment/$deploy_name --timeout=300s; then
        echo -e "${RED}Deployment $deploy_name failed!${NC}"
        return 1
    fi
    return 0
}

# Function to check pod logs for errors
check_logs() {
    local version=$1
    local pod_name=$(kubectl get pods -l version=$version -o jsonpath='{.items[0].metadata.name}')
    
    echo -e "${BLUE}Checking logs for $version version (pod: $pod_name)...${NC}"
    kubectl logs $pod_name | grep -i error
    
    if [ $? -eq 0 ]; then
        echo -e "${RED}Found errors in $version deployment logs!${NC}"
        return 1
    else
        echo -e "${GREEN}No errors found in $version deployment logs.${NC}"
        return 0
    fi
}

# Deploy blue version
echo -e "${BLUE}Deploying blue version...${NC}"
kubectl apply -f blue_deployment.yaml
kubectl apply -f kubeservice.yaml

if ! check_deployment "django-messaging-blue"; then
    echo -e "${RED}Blue deployment failed!${NC}"
    exit 1
fi

if ! check_logs "blue"; then
    echo -e "${YELLOW}Warning: Issues found in blue deployment${NC}"
fi

# Deploy green version
echo -e "${BLUE}Deploying green version...${NC}"
kubectl apply -f green_deployment.yaml

if ! check_deployment "django-messaging-green"; then
    echo -e "${RED}Green deployment failed!${NC}"
    exit 1
fi

if ! check_logs "green"; then
    echo -e "${RED}Issues found in green deployment. Aborting switch!${NC}"
    exit 1
fi

# Test green deployment
echo -e "${BLUE}Testing green deployment...${NC}"
kubectl get service django-messaging-service-test

# If everything is good, switch traffic to green
echo -e "${GREEN}Green deployment looks good. Switching traffic...${NC}"
kubectl patch service django-messaging-service -p '{"spec":{"selector":{"version":"green"}}}'

echo -e "${GREEN}Blue-green deployment completed successfully!${NC}"

# Show final status
echo -e "\n${BLUE}Current deployment status:${NC}"
kubectl get pods -l app=django-messaging
kubectl get services | grep django-messaging 